{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/mohannedkandil/web/serona/web/app/api/transcribe/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { audio } = await request.json();\n\n    if (!audio) {\n      return NextResponse.json(\n        { error: 'No audio data provided' },\n        { status: 400 }\n      );\n    }\n\n    const DEEPGRAM_API_KEY = process.env.DEEPGRAM_API_KEY;\n\n    if (!DEEPGRAM_API_KEY) {\n      return NextResponse.json(\n        { error: 'Deepgram API key not configured' },\n        { status: 500 }\n      );\n    }\n\n    // Convert base64 to buffer\n    const audioBuffer = Buffer.from(audio, 'base64');\n\n    // Call Deepgram API\n    const response = await fetch(\n      'https://api.deepgram.com/v1/listen?model=nova-2&smart_format=true',\n      {\n        method: 'POST',\n        headers: {\n          'Authorization': `Token ${DEEPGRAM_API_KEY}`,\n          'Content-Type': 'audio/webm',\n        },\n        body: audioBuffer,\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Deepgram API error:', errorText);\n      return NextResponse.json(\n        { error: `Deepgram API error: ${response.status}` },\n        { status: response.status }\n      );\n    }\n\n    const result = await response.json();\n    const transcription = result.results?.channels?.[0]?.alternatives?.[0]?.transcript;\n\n    if (!transcription) {\n      return NextResponse.json(\n        { error: 'No transcription found in response' },\n        { status: 500 }\n      );\n    }\n\n    return NextResponse.json({ transcription });\n  } catch (error) {\n    console.error('Transcription error:', error);\n    return NextResponse.json(\n      { error: 'Failed to transcribe audio' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEpC,IAAI,CAAC,OAAO;YACV,OAAO,wKAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAyB,GAClC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,mBAAmB,QAAQ,GAAG,CAAC,gBAAgB;QAErD,IAAI,CAAC,kBAAkB;YACrB,OAAO,wKAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkC,GAC3C;gBAAE,QAAQ;YAAI;QAElB;QAEA,2BAA2B;QAC3B,MAAM,cAAc,OAAO,IAAI,CAAC,OAAO;QAEvC,oBAAoB;QACpB,MAAM,WAAW,MAAM,MACrB,qEACA;YACE,QAAQ;YACR,SAAS;gBACP,iBAAiB,CAAC,MAAM,EAAE,kBAAkB;gBAC5C,gBAAgB;YAClB;YACA,MAAM;QACR;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,QAAQ,KAAK,CAAC,uBAAuB;YACrC,OAAO,wKAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;YAAC,GAClD;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,SAAS,MAAM,SAAS,IAAI;QAClC,MAAM,gBAAgB,OAAO,OAAO,EAAE,UAAU,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE;QAExE,IAAI,CAAC,eAAe;YAClB,OAAO,wKAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqC,GAC9C;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,wKAAY,CAAC,IAAI,CAAC;YAAE;QAAc;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,wKAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}